<?xml version="1.0"?>
<implementation>
  <functions>
    package.loaded.L_MpcClient = nil
    mpcctrl = require ("L_MpcClient")    
	MPCCTRL_SERVICE = mpcctrl.MPCCTRL_SERVICE
    function nextStep()
	  mpcctrl.doStep()
    end	
    function startup(lul_device)
	  mpcctrl.initialize(lul_device)
    end
  </functions>
  <incoming>
      luup.log("when does this happen")
  </incoming>
  <startup>startup</startup>
  <actionList>
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>setMpcUrl</name>
      <run>
        luup.variable_set(MPCCTRL_SERVICE, "mpcUrl", lul_settings.xUrl or "", lul_device)
      </run>
    </action>
	<action>
	 <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
	 <name>setMpc</name>
	   <run>
		 yMpcID = mpcctrl.setMpc(lul_settings.xTransFunc, lul_settings.xTransFuncType, lul_settings.xSamplePeriod, lul_settings.xInputDelay)
		 if yMpcID then
			 luup.variable_set(MPCCTRL_SERVICE, "mpcid", yMpcID, lul_device)
			 luup.call_timer("nextStep", 1, tostring(lul_settings.xSamplePeriod), "")
		 end
	   </run>
	</action>	
	<action>
	 <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
	 <name>getStep</name>
	   <run>
		 yComputedY, yComputedU = mpcctrl.getNextStep()
		 if yComputedU then
			 luup.variable_set(MPCCTRL_SERVICE, "computedY", yComputedY, lul_device)
			 luup.variable_set(MPCCTRL_SERVICE, "computedU", yComputedU, lul_device)
		 end
	   </run>
	</action>   
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>setSetPoint</name>
      <run>
        luup.variable_set(MPCCTRL_SERVICE, "setpoint", lul_settings.xSetpoint or "", lul_device)
      </run>
    </action>	
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>setBypass</name>
      <run>
        luup.variable_set(MPCCTRL_SERVICE, "bypass", "1", lul_device)
      </run>
    </action>	
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>unsetBypass</name>
      <run>
        luup.variable_set(MPCCTRL_SERVICE, "bypass", "0", lul_device)
      </run>
    </action>		
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>setCtrlDevice</name>
      <run>
        mpcctrl.setCtrlDevice(lul_settings.xDeviceId, lul_settings.xServiceId, lul_settings.xAction, lul_settings.xVariable)
      </run>
    </action>		
    <action>
      <serviceId>urn:demo-micasaverde-com:serviceId:MpcControl1</serviceId>
      <name>setMesDevice</name>
      <run>
        mpcctrl.setMesDevice(lul_settings.xDeviceId, lul_settings.xServiceId, lul_settings.xVariable)
      </run>
    </action>	
  </actionList>
</implementation>
